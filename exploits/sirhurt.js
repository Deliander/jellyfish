if (process.platform != "win32") return module.exports = require("./null");


const { dialog } = require('electron')
const fs = require("fs")
const path = require("path")
const homedir = require('os').homedir();
const child_process = require('child_process')
const fetch = require("node-fetch")

JELLYFISH_DATA_DIR = global.JELLYFISH_DATA_DIR


async function init() {
    if (!fs.existsSync("sirhurt.dat")) {
        fs.writeFileSync("sirhurt.dat","")
    }
    if (!fs.existsSync(path.join(JELLYFISH_DATA_DIR,"Scripts", "SirHurt"))) {
        try {
            fs.mkdirSync(path.join(JELLYFISH_DATA_DIR,"Scripts", "SirHurt"))
            var scrpts = await fetch("https://sirhurt.net/upl/UIScriptHub/fetch.php")
            var j = await scrpts.json()
            for (var id in j.scripts) {
                try {
                    var scr = j.scripts[id]
                    var ws = fs.createWriteStream(path.join(JELLYFISH_DATA_DIR,"Scripts", "SirHurt",scr.FileName))
                    ws.write("--[[ " + scr.Desc + " ]]--\r\n\r\n")
                    var f = await fetch("https://sirhurt.net/upl/UIScriptHub/Scripts/" + scr.FileName)
                    f.body.pipe(ws)
                } catch(e) {}
            }
        } catch(e) {}
    }
    watch()
    update()
}
var lastUpdate = 0

var file
    
function watch() {
    fs.watch((file && fs.existsSync(file)) ? file : "sirhurt.dat").on("change",() => {
        if (process.uptime() - lastUpdate > 0.01) {
            console.log("noooo! you cant just have an icon spin as confirmation")
            win.webContents.send("script-ran")
            watch()
        }
        lastUpdate = process.uptime()
    })
}
function downloadInitialScripts() {
    
}



function runScript(arg) {
    fs.writeFileSync(path.join((file && fs.existsSync(file)) ? file : "sirhurt.dat"),arg)
}

var firstInject = true


async function update() {
    // /child_process.execSync('curl -s  > "' + path.join(DEFAULT_CAPPS_LOCATION,"libChomp.dylib") + '"')
    
    var p1 = new Promise(async (a,r) => {
        console.log("Downloading file https://sirhurt.net/asshurt/update/v4/SirHurtInjector.dll")
        var res = await fetch('https://sirhurt.net/asshurt/update/v4/SirHurtInjector.dll')
        res.body.pipe(fs.createWriteStream("SirHurtInjector.dll"));
        res.body.on("end",() => {console.log("Downloaded injector");a()})
    })
    var p2 = new Promise(async (a,r) => {
        console.log("Fetching https://sirhurt.net/asshurt/update/v4/fetch_version.php")
        var vf = await fetch("https://sirhurt.net/asshurt/update/v4/fetch_version.php")
        global.v = await vf.text()
        console.log("Downloading",v)
        var res = await fetch(v)
        res.body.pipe(fs.createWriteStream("SirHurt.dll"));
        res.body.on("end",() => {console.log("Downloaded SirHurt");a()})
    })
    return Promise.all([p1,p2])   
    
}


async function inject(event,arg) {
    var win = global.win
    event.reply("set-inject-btn-text","Updating")
    var vf = await fetch("https://sirhurt.net/asshurt/update/v4/fetch_version.php")
    var vv = await vf.text()
    if (v != vv) {
        await update()
    }
    event.reply("set-inject-btn-text","Injecting")
    var out = child_process.spawnSync(path.resolve("JellyInjector-SirHurt.exe")).stdout
    /*out.unref()
    out.on("exit", () => {
        
        setTimeout(function() {
            event.reply("enable-inject-btn")
        },2000)
        event.reply("set-inject-btn-text","Injected")
        if (dialog.showMessageBoxSync(win,{
            message: "SirHurt injection completed.",
            detail: `If it doesn't work, try again until it does. Sometimes SirHurt doesn't inject the first time.\n\nEnjoying Jellyfish? Consider donating for more updates and features.`,
            buttons: ["Sure","Dismiss"],
            defaultId: 1,
        }) != 1) {
            child_process.spawnSync("cmd",["/s","/c","start","https://thelmgn.com/donate.html","/b"])
        }
        return 
    })
    */
    var s = out.toString().split("\r\n")[0].split("|")
    console.log(out)
   
    if (s[1] == "0") {
        dialog.showMessageBoxSync(win,{
            message: "Roblox isn't running",
            detail: "We couldn't inject into Roblox, well, because there's no Roblox to inject into!",
        })
        setTimeout(function() {
            event.reply("enable-inject-btn")
        },2000)
        return event.reply("set-inject-btn-text","Failed")
    } else {
        file = s[0]
        setTimeout(function() {
            event.reply("enable-inject-btn")
        },2000)
        firstInject = false
        if (dialog.showMessageBoxSync(win,{
            message: "SirHurt injection completed.",
            detail: `Magic Numbers: WPtr=${s[1]} WTPID=${s[3]} IR=${s[2]} (these mean something I think)\n\nEnjoying Jellyfish? Consider donating for more updates and features.`,
            buttons: ["Sure","Dismiss"],
            defaultId: 1,
        }) != 1) {
            child_process.spawnSync("cmd",["/s","/c","start","https://thelmgn.com/donate.html","/b"])
        }
    
        return event.reply("set-inject-btn-text","Injected")
    }   
}

module.exports = {init,downloadInitialScripts,inject,runScript}